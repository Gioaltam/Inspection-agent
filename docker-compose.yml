# docker-compose setup
version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: inspection_portal
      POSTGRES_USER: inspector
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inspector"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://inspector:${DB_PASSWORD}@postgres:5432/inspection_portal
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./backend:/app/backend
      - ./scripts:/app/scripts
      - ./frontend_web:/app/frontend_web
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  portal:
    build: .
    command: uvicorn portal:app --host 0.0.0.0 --port 8000
    ports:
      - "8001:8000"
    environment:
      - PORTAL_EXTERNAL_BASE_URL=${PORTAL_EXTERNAL_BASE_URL}
      - TOKEN_TTL_HOURS=${TOKEN_TTL_HOURS}
      - UPLOAD_TOKEN_TTL_HOURS=${UPLOAD_TOKEN_TTL_HOURS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./workspace:/app/workspace
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    volumes:
      - ./frontend_web:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - portal

volumes:
  postgres_data:
